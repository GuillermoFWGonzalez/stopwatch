:root {
	--defaultButtonSize: max(calc(0.7vw + 0.7vh), 0.75rem);
}

p{
	font-size: min(20vw, 40vh);
}

.buttons{
    text-align: center;
	position: fixed;
	bottom: 0.5%;
}

button{
	color: #fff;
	background: #000;
	font-size: calc(1.2 * var(--defaultButtonSize));
	padding: calc(0.8 * var(--defaultButtonSize)) calc(1.6 * var(--defaultButtonSize));
	border-radius: calc(1.6 * var(--defaultButtonSize));
	margin: calc(0.3 * var(--defaultButtonSize));
	border: calc(0.25 * var(--defaultButtonSize)) solid black;
	position: relative;
}

@media screen and (min-width: 720px) and (min-height: 512px) and (orientation: landscape) {
	p:hover{
		font-size: min(20.5vw, 41vh);
	}

	button:hover{
		color: #fff;
		border: calc(0.25 * var(--defaultButtonSize)) solid black;
		background: transparent;
	}
}

@media screen and ((max-width: 720px) or (max-height: 512px)){	
	p{
		transform: translateY(-3vh);
	}
}

@media screen and (max-height: 400px){	
	p{
		transform: translateY(-5vh);
	}
}


/*My Standard Stuff Starts Here*/
*{
	margin: 0;
	padding: 0;
	border: 0;
	box-sizing: border-box;
	-webkit-touch-callout: none; 
    -webkit-user-select: none; 
    -khtml-user-select: none; 
    -moz-user-select: none; 
    -ms-user-select: none; 
    user-select: none;
}

body{
	margin: 0;
	height: 100%;
	color: white;
	text-align: center;
	background: linear-gradient(-45deg, #FF5F6D, #FFC371);
    background-repeat: no-repeat;
    background-attachment: fixed;
	background-size: 400% 400%;
	animation: gradient 15s ease infinite;
}

main{
	width: 100%;
	height: 100vh;
	display: flex;
	align-items: center;
	justify-content: center;
	animation: animationIn 3s;
}

@keyframes animationIn{
	from{
		opacity: 0;
		transform: translateY(-3rem);
	}
	to{
		opacity: 1;
		transform: translateY(0);
	}
}

@keyframes gradient {
	0% {
		background-position: 0% 50%;
	}
	50% {
		background-position: 100% 50%;
	}
	100% {
		background-position: 0% 50%;
	}
}